@import '../style/common/var';


@mixin btn-bg($bgColor,$borderColor,$color) {
    background-color: $bgColor;
        border: 2px solid $borderColor;
        color: $color;
        &:hover{
            border: 2px solid $borderColor;
            color: $color;
            opacity: .8;
        }
        &:active , &:focus{
            border: 2px solid $borderColor;
        }
}
@mixin btn-size($size) {
    @if $size == 'large' {
        min-width: 90px;
        padding: .5em 1.25em;
    }  @else if $size == 'small' {
        min-width: 40px;
        padding: .2em .5em;
    } @else {
        min-width: 64px;
        padding: .35em 1em;
    }
}
.shadow {
    box-shadow: 0px 3px 1px -2px rgba(0,0,0,0.2),
    0px 2px 2px 0px rgba(0,0,0,0.14),
    0px 1px 5px 0px rgba(0,0,0,0.12);
}
.ds-btn {
    box-sizing: border-box;
    text-align: center;
    font-size: 1em;
    margin: 1em;
    @include btn-size('medium');
    border-radius: 3px;
    cursor: pointer;
    transition: all .4s ease 0;
    
    &:active , &:focus{
        outline: none;
    }  
}
.ds-default {
    @extend .shadow;
    @include btn-bg($defalut,$defalut,white);
}
.ds-primary {
    @extend .shadow;
    @include btn-bg($primary,$primary,white);
}
.ds-danger {
    @extend .shadow;
    @include btn-bg($danger, $danger, white);
}
.ds-default-outline {
    @include btn-bg(white,$defalut,$defalut);
}
.ds-primary-outline {
    @include btn-bg(white,$primary,$primary);
}
.ds-danger-outline {
    @include btn-bg(white,$danger,$danger);
}
.small {
    @include btn-size('small');
}
.large {
    @include btn-size('large');
}
.medium {
    @include btn-size('medium');
}

.ripple {
    position: relative;
    overflow: hidden;
    transform: translate3d(0, 0, 0);
  
    &:after {
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      pointer-events: none;
      background-image: radial-gradient(circle, #000 10%, transparent 10.01%);
      background-repeat: no-repeat;
      background-position: 50%;
      transform: scale(10,10);
      opacity: 0;
      transition: transform .5s, opacity 1s;
    }
  
    &:active:after {
      transform: scale(0,0);
      opacity: .2;
      transition: 0s;
    }
  }

